// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

// See the links below for the doc:
// https://css-tricks.com/snippets/sass/simplifying-contexts-events/
// https://dev.to/alemesa/10-awesome-sass-scss-mixins-5ci2


/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Kitty Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}


/// Box
@mixin box($width, $height: $width) {
  width: $width;
  height: $height;
}


/// Flexbox Toolkit
@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-center-column {
  @include flex-center;
  flex-direction: column;
}

@mixin flex-center-vert {
  display: flex;
  align-items: center;
}

@mixin flex-center-horiz {
  display: flex;
  justify-content: center;
}

/// Padding & Margin Toolkit
@mixin padding-horiz($padding) {
  padding-left: $padding;
  padding-right: $padding;
}

@mixin padding-vert($padding) {
  padding-top: $padding;
  padding-bottom: $padding;
}

@mixin margin-horiz($margin) {
  margin-left: $margin;
  margin-right: $margin;
}

@mixin margin-vert($margin) {
  margin-top: $margin;
  margin-bottom: $margin;
}


/// Font Size
@mixin font-size($font-size, $line-height: normal, $letter-spacing: normal) {
  font-size: $font-size * 1rem;

  @if $line-height==normal {
    line-height: normal;
  } @else {
    line-height: $line-height / $font-size;
  }

  @if $letter-spacing==normal {
    letter-spacing: normal;
  } @else {
    letter-spacing: #{$letter-spacing / $font-size}em;
  }
}

/// Font Face
@mixin font-face($font-name, $path, $weight: normal, $style: normal) {
  @font-face {
    font-family: quote($font-name);
    src: url($path + ".eot");
    src: url($path + ".eot?#iefix") format("embedded-opentype"), url($path + ".woff")
  format("woff"), url($path + ".ttf") format("truetype"), url($path + ".svg##{$font-name}")
  format("svg");
    font-weight: $weight;
    font-style: $style;
  }
}


/// Cover Background
@mixin cover-background {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

@mixin transition($prop, $time: $time2, $easing: $easing, $delay: 0s) {
  $transition: ();
  @for $i from 1 through length($prop) {
    @for $j from 0 to (length($prop)) - (length($time)) {
      $time: join($time, nth($time, -1));
    }
    @for $j from 0 to (length($prop)) - (length($easing)) {
      $easing: join($easing, nth($easing, -1));
    }
    @for $j from 0 to (length($prop)) - (length($delay)) {
      $delay: join($delay, nth($delay, -1));
    }

    $transition: append(
            $transition,
                (nth($prop, $i) nth($time, $i) nth($easing, $i) nth($delay, $i)),
        $separator: comma
    );
  }
  transition: $transition;
}


/// Pseudo
@mixin pseudo(
  $width: 100%,
  $height: 100%,
  $display: inline-block,
  $pos: absolute,
  $content: ""
) {
  content: $content;
  display: $display;
  position: $pos;
  @include box($width, $height);
}


/// Media queries
@mixin breakpoint($device) {
  @media only screen and (min-width: $device * 1px) {
    @content;
  }
}


/// Z-index handling
$z-index-level: very-low, low, middle, high, very-high;

@mixin z-index($id) {
  z-index: index($z-index-level, $id);
}


/// Visibility
@mixin fade($type) {
  @include transition(visibility opacity, $time3 $time3);

  @if $type== "hide" {
    visibility: hidden;
    opacity: 0;
  } @else if $type== "show" {
    visibility: visible;
    opacity: 1;
  }
}